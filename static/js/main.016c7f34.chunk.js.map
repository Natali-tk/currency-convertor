{"version":3,"sources":["styles/styles.tsx","store/currency/actionTypes.ts","components/NavBar.tsx","components/CurrencyRow.tsx","store/currency/selectors.ts","store/currency/reducer.ts","store/currency/sagas.ts","store/currency/actions.ts","store/filters/filters-selectors.ts","store/filters/filters-slicers.ts","pages/ConvertorPage.tsx","helpers/findExchangeRate.ts","components/Table/TableHeader.tsx","components/Table/TableRow.tsx","components/Table/Table.tsx","components/Selector.tsx","pages/ExchangeRatePage.tsx","App.tsx","store/rootReducer.ts","store/rootSaga.ts","store/index.ts","index.tsx"],"names":["styled","div","CurrencyActionType","NavBar","Title","h1","Equal","span","ListNavLinks","ul","Links","li","TextLink","SelectBox","Select","select","InputAmount","input","ConvertorBox","Navbar","to","CurrencyRow","currencyOptions","selectedCurrency","amount","onChangeCurrency","onChangeAmount","type","pattern","value","Number","toFixed","onChange","map","option","key","shortid","generate","getCurrenciesSelector","createSelector","state","currency","currencies","getCurrencyOptions","cc","getPendingSelector","pending","getErrorSelector","error","initialState","fetchCurrencySaga","currencySaga","getCurrencies","axios","get","call","response","put","fetchCurrencySuccess","data","fetchCurrencyFailure","message","all","takeLatest","FETCH_CURRENCY_REQUEST","fetchCurrencyRequest","payload","FETCH_CURRENCY_SUCCESS","FETCH_CURRENCY_FAILURE","getFromCurrencySelector","filters","fromCurrency","getToCurrencySelector","toCurrency","getAmountSelector","getAmountInFromCurrencySelector","amountInFromCurrency","getBaseCurrencySelector","baseCurrency","createSlice","name","reducers","setFromCurrency","action","setToCurrency","setAmount","setAmountInFromCurrency","setBaseCurrency","reducer","actions","ConvertorPage","fromAmount","toAmount","useState","exchangeRate","setExchangeRate","dispatch","useDispatch","useSelector","currArr","useEffect","from","exchangeRate2","find","item","rate","exchangeRate1","findExchRate","event","FilterActionsCreator","target","className","TableHeader","TableRow","base","txt","Table","findObj","undefined","Selector","currencySelect","handleChangeSelect","ExchangeRatePage","App","fallback","component","path","exact","rootReducer","combineReducers","reducerFilter","rootSaga","fork","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","logger","run","render","StrictMode","document","querySelector"],"mappings":"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","file":"static/js/main.016c7f34.chunk.js","sourcesContent":["import styled from 'styled-components';\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  max-width: 1024px;\r\n  color: white;\r\n  background-color: #ffffff;\r\n`;\r\nexport const NavBar = styled.div`\r\n  display: flex;\r\n  padding: 1rem 2rem;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  color: white;\r\n  background-color: teal;\r\n`;\r\nexport const Title = styled.h1`\r\n  margin: 0;\r\n  margin-top: 4rem;\r\n  margin-bottom: 2rem;\r\n  font-weight: bold;\r\n  font-size: 3.5rem;\r\n  color: teal;\r\n`;\r\nexport const Equal = styled.span`\r\n  font-weight: bold;\r\n  font-size: 3rem;\r\n  margin-top: 4rem;\r\n  margin-top: 4rem;\r\n  color: black;\r\n`;\r\nexport const ListNavLinks = styled.ul`\r\n  display: flex;\r\n  align-items: center;\r\n  list-style: none\r\n  font-weight: 600;\r\n  line-height: 1.18;\r\n  margin-bottom: 1em;\r\n  color:#ffffff;\r\n`;\r\nexport const Links = styled.li`\r\n  margin-right: 1em;\r\n`;\r\nexport const TextLink = styled.span`\r\n  font-weight: 700;\r\n  line-height: 1.18;\r\n  font-size: 1.3rem;\r\n  color: #ffffff;\r\n`;\r\nexport const SelectBox = styled.div`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  padding-top: 3rem;\r\n  padding-bottom: 3rem;\r\n`;\r\nexport const Select = styled.select`\r\n  display: block;\r\n  margin-left: 0.5em;\r\n  max-width: 4.5em;\r\n`;\r\nexport const InputAmount = styled.input`\r\n  max-width: 10rem;\r\n  padding: 0.025em 0.5em;\r\n`;\r\nexport const ConvertorBox = styled.div`\r\n  margin: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 20vh;\r\n  text-align: center;\r\n`;\r\n","export enum CurrencyActionType {\r\n  FETCH_CURRENCY_REQUEST = 'FETCH_CURRENCY_REQUEST',\r\n  FETCH_CURRENCY_SUCCESS = 'FETCH_CURRENCY_SUCCESS',\r\n  FETCH_CURRENCY_FAILURE = 'FETCH_CURRENCY_FAILURE',\r\n}\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Links, ListNavLinks, NavBar, TextLink } from '../styles/styles';\r\n\r\nexport const Navbar: React.FC = () => (\r\n  <NavBar>\r\n    <ListNavLinks>\r\n      <Links>\r\n        <NavLink to=\"/\">\r\n          <TextLink>Конвертер</TextLink>\r\n        </NavLink>\r\n      </Links>\r\n      <Links>\r\n        <NavLink to=\"/about\">\r\n          <TextLink>Курс обміну</TextLink>\r\n        </NavLink>\r\n      </Links>\r\n    </ListNavLinks>\r\n  </NavBar>\r\n);\r\n","import React from 'react';\r\nimport { CurrProps } from '../types/CurrProps';\r\nimport shortid from 'shortid';\r\nimport { ConvertorBox, InputAmount, Select } from '../styles/styles';\r\n\r\nexport const CurrencyRow: React.FC<CurrProps> = ({\r\n  currencyOptions,\r\n  selectedCurrency,\r\n  amount,\r\n  onChangeCurrency,\r\n  onChangeAmount,\r\n}) => {\r\n  return (\r\n    <ConvertorBox>\r\n      <InputAmount\r\n        type=\"number\"\r\n        pattern=\"^\\d+(\\.|\\,)\\d{2}\"\r\n        value={amount <= 0 ? '' : Number(amount.toFixed(4))}\r\n        onChange={onChangeAmount}\r\n      />\r\n      <Select value={selectedCurrency} onChange={onChangeCurrency}>\r\n        {currencyOptions.map(option => (\r\n          <option key={shortid.generate()} value={option}>\r\n            {option}\r\n          </option>\r\n        ))}\r\n      </Select>\r\n    </ConvertorBox>\r\n  );\r\n};\r\n","import { createSelector } from 'reselect';\r\n\r\nimport { AppState } from '../rootReducer';\r\n\r\nconst getPending = (state: AppState) => state.currency.pending;\r\n\r\nconst getCurrencies = (state: AppState) => state.currency.currencies;\r\n\r\nconst getError = (state: AppState) => state.currency.error;\r\n\r\nexport const getCurrenciesSelector = createSelector(\r\n  getCurrencies,\r\n  currencies => currencies,\r\n);\r\nexport const getCurrencyOptions = createSelector(\r\n  getCurrenciesSelector,\r\n  currencies => currencies.map(currency => currency.cc),\r\n);\r\n\r\nexport const getPendingSelector = createSelector(\r\n  getPending,\r\n  pending => pending,\r\n);\r\n\r\nexport const getErrorSelector = createSelector(getError, error => error);\r\n","import { CurrencyActionType } from './actionTypes';\r\nimport { CurrencyActions } from './types';\r\nimport { CurrencyState } from '../../types/CurrState';\r\n\r\nconst initialState: CurrencyState = {\r\n  pending: false,\r\n  currencies: [],\r\n  error: null,\r\n};\r\n\r\nconst currencyReducer = (state = initialState, action: CurrencyActions) => {\r\n  switch (action.type) {\r\n    case CurrencyActionType.FETCH_CURRENCY_REQUEST:\r\n      return {\r\n        ...state,\r\n        pending: true,\r\n      };\r\n    case CurrencyActionType.FETCH_CURRENCY_SUCCESS:\r\n      return {\r\n        ...state,\r\n        pending: false,\r\n        currencies: action.payload.currencies,\r\n        error: null,\r\n      };\r\n    case CurrencyActionType.FETCH_CURRENCY_FAILURE:\r\n      return {\r\n        ...state,\r\n        pending: false,\r\n        currencies: [],\r\n        error: action.payload.error,\r\n      };\r\n    default:\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n};\r\n\r\nexport { currencyReducer };\r\n","import axios from 'axios';\r\nimport { all, call, put, takeLatest } from 'redux-saga/effects';\r\nimport { fetchCurrencyFailure, fetchCurrencySuccess } from './actions';\r\nimport { CurrencyActionType } from './actionTypes';\r\nimport { Currency } from '../../types/Currency';\r\n\r\nexport interface ResponseGenerator {\r\n  data: Currency[];\r\n}\r\nconst getCurrencies = () =>\r\n  axios.get<Currency[]>(\r\n    'https://bank.gov.ua/NBUStatService/v1/statdirectory/exchange?json',\r\n  );\r\n\r\n/*\r\n  Worker Saga: Fired on FETCH_CURRENCY_REQUEST action\r\n*/\r\nfunction* fetchCurrencySaga() {\r\n  try {\r\n    const response: ResponseGenerator = yield call(getCurrencies);\r\n    yield put(\r\n      fetchCurrencySuccess({\r\n        currencies: response.data,\r\n      }),\r\n    );\r\n  } catch (error: any) {\r\n    yield put(\r\n      fetchCurrencyFailure({\r\n        error: error.message,\r\n      }),\r\n    );\r\n  }\r\n}\r\n\r\n/*\r\n  Starts worker saga on latest dispatched `FETCH_CURRENCY_REQUEST` action.\r\n*/\r\nexport function* currencySaga() {\r\n  yield all([\r\n    takeLatest(CurrencyActionType.FETCH_CURRENCY_REQUEST, fetchCurrencySaga),\r\n  ]);\r\n}\r\n\r\n\r\n","import { CurrencyActionType } from './index';\r\nimport {\r\n  FetchCurrencyRequest,\r\n  FetchCurrencySuccess,\r\n  FetchCurrencySuccessPayload,\r\n  FetchCurrencyFailure,\r\n  FetchCurrencyFailurePayload,\r\n} from './types';\r\n\r\nconst fetchCurrencyRequest = (): FetchCurrencyRequest => ({\r\n  type: CurrencyActionType.FETCH_CURRENCY_REQUEST,\r\n});\r\n\r\nconst fetchCurrencySuccess = (\r\n  payload: FetchCurrencySuccessPayload,\r\n): FetchCurrencySuccess => ({\r\n  type: CurrencyActionType.FETCH_CURRENCY_SUCCESS,\r\n  payload,\r\n});\r\n\r\nconst fetchCurrencyFailure = (\r\n  payload: FetchCurrencyFailurePayload,\r\n): FetchCurrencyFailure => ({\r\n  type: CurrencyActionType.FETCH_CURRENCY_FAILURE,\r\n  payload,\r\n});\r\n\r\nexport { fetchCurrencyRequest, fetchCurrencySuccess, fetchCurrencyFailure };\r\n","import { createSelector } from 'reselect';\r\n\r\nimport { AppState } from '../rootReducer';\r\n\r\nconst getFromCurrency = (state: AppState) => state.filters.fromCurrency;\r\nconst getToCurrency = (state: AppState) => state.filters.toCurrency;\r\nconst getAmount = (state: AppState) => state.filters.amount;\r\nconst getAmountInFromCurrency = (state: AppState) =>\r\n  state.filters.amountInFromCurrency;\r\nconst getBaseCurrency = (state: AppState) => state.filters.baseCurrency;\r\n\r\nexport const getFromCurrencySelector = createSelector(\r\n  getFromCurrency,\r\n  fromCurrency => fromCurrency,\r\n);\r\nexport const getToCurrencySelector = createSelector(\r\n  getToCurrency,\r\n  toCurrency => toCurrency,\r\n);\r\nexport const getAmountSelector = createSelector(getAmount, amount => amount);\r\nexport const getAmountInFromCurrencySelector = createSelector(\r\n  getAmountInFromCurrency,\r\n  amountInFromCurrency => amountInFromCurrency,\r\n);\r\nexport const getBaseCurrencySelector = createSelector(\r\n  getBaseCurrency,\r\n  baseCurrency => baseCurrency,\r\n);\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  fromCurrency: 'UAH',\r\n  toCurrency: 'USD',\r\n  amount: 1,\r\n  amountInFromCurrency: true,\r\n  baseCurrency: 'UAH',\r\n};\r\n\r\nconst { reducer, actions } = createSlice({\r\n  name: 'filters',\r\n  initialState,\r\n  reducers: {\r\n    setFromCurrency: (state, action: PayloadAction<string>) => ({\r\n      ...state,\r\n      fromCurrency: action.payload,\r\n    }),\r\n    setToCurrency: (state, action: PayloadAction<string>) => ({\r\n      ...state,\r\n      toCurrency: action.payload,\r\n    }),\r\n    setAmount: (state, action: PayloadAction<number>) => ({\r\n      ...state,\r\n      amount: action.payload,\r\n    }),\r\n    setAmountInFromCurrency: (state, action: PayloadAction<boolean>) => ({\r\n      ...state,\r\n      amountInFromCurrency: action.payload,\r\n    }),\r\n    setBaseCurrency: (state, action: PayloadAction<string>) => ({\r\n      ...state,\r\n      baseCurrency: action.payload,\r\n    }),\r\n  },\r\n});\r\n\r\nexport { actions as FilterActionsCreator };\r\nexport { reducer as reducerFilter };\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { CurrencyRow } from '../components/CurrencyRow';\r\nimport { findExchRate } from '../helpers/findExchangeRate';\r\nimport {\r\n  getPendingSelector,\r\n  getCurrenciesSelector,\r\n  getErrorSelector,\r\n  getCurrencyOptions,\r\n} from '../store/currency/selectors';\r\nimport { fetchCurrencyRequest } from '../store/currency/actions';\r\nimport {\r\n  getAmountInFromCurrencySelector,\r\n  getAmountSelector,\r\n  getFromCurrencySelector,\r\n  getToCurrencySelector,\r\n} from '../store/filters/filters-selectors';\r\n\r\nimport { FilterActionsCreator } from '../store/filters';\r\nimport { Equal, Title } from '../styles/styles';\r\n\r\nexport const ConvertorPage: React.FC = () => {\r\n  const [exchangeRate, setExchangeRate] = useState<any>();\r\n\r\n  const dispatch = useDispatch();\r\n  const pending = useSelector(getPendingSelector);\r\n  const currencies = useSelector(getCurrenciesSelector);\r\n  const currArr = useSelector(getCurrencyOptions);\r\n  const currencyOptions = ['UAH', ...currArr];\r\n  const error = useSelector(getErrorSelector);\r\n  const fromCurrency = useSelector(getFromCurrencySelector);\r\n  const toCurrency = useSelector(getToCurrencySelector);\r\n  const amount = useSelector(getAmountSelector);\r\n  const amountInFromCurrency = useSelector(getAmountInFromCurrencySelector);\r\n\r\n  let fromAmount: number, toAmount: number;\r\n  if (amountInFromCurrency) {\r\n    fromAmount = amount;\r\n    toAmount = amount * exchangeRate;\r\n  } else {\r\n    toAmount = amount;\r\n    fromAmount = amount / exchangeRate;\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchCurrencyRequest());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    setExchangeRate(findExchRate(fromCurrency, toCurrency, currencies));\r\n  }, [fromCurrency, toCurrency, currencies]);\r\n\r\n  function handleFromAmountChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n    dispatch(FilterActionsCreator.setAmount(Number(event.target.value)));\r\n    dispatch(FilterActionsCreator.setAmountInFromCurrency(true));\r\n  }\r\n\r\n  function handleToAmountChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n    dispatch(FilterActionsCreator.setAmount(Number(event.target.value)));\r\n    dispatch(FilterActionsCreator.setAmountInFromCurrency(false));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Title>Конвертер</Title>\r\n      {pending ? (\r\n        <div>Loading...</div>\r\n      ) : error ? (\r\n        <div>Error</div>\r\n      ) : (\r\n        <div>\r\n          <CurrencyRow\r\n            currencyOptions={currencyOptions}\r\n            selectedCurrency={fromCurrency}\r\n            onChangeCurrency={(event: React.ChangeEvent<HTMLSelectElement>) =>\r\n              dispatch(FilterActionsCreator.setFromCurrency(event.target.value))\r\n            }\r\n            onChangeAmount={handleFromAmountChange}\r\n            amount={fromAmount}\r\n          />\r\n          <Equal className=\"equal\">=</Equal>\r\n          <CurrencyRow\r\n            currencyOptions={currencyOptions}\r\n            selectedCurrency={toCurrency}\r\n            onChangeCurrency={(event: React.ChangeEvent<HTMLSelectElement>) =>\r\n              dispatch(FilterActionsCreator.setToCurrency(event.target.value))\r\n            }\r\n            onChangeAmount={handleToAmountChange}\r\n            amount={toAmount}\r\n          />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import { Currency } from '../types/Currency';\r\n\r\nexport const findExchRate = (from: string, to: string, data: Currency[]) => {\r\n  if (from != null && to != null) {\r\n    let exchangeRate;\r\n    if (from === to) {\r\n      return (exchangeRate = 1);\r\n    } else if (from === 'UAH') {\r\n      const exchangeRate2 = data.find((item: Currency) => item.cc === to)?.rate;\r\n      return exchangeRate2 ? (exchangeRate = 1 / exchangeRate2) : null;\r\n    } else if (to === 'UAH') {\r\n      const exchangeRate1 = data?.find(\r\n        (item: Currency) => item.cc === from,\r\n      )?.rate;\r\n      return exchangeRate1 ? (exchangeRate = exchangeRate1 / 1) : null;\r\n    } else if (from && to) {\r\n      const exchangeRate1 = data?.find(\r\n        (item: Currency) => item.cc === from,\r\n      )?.rate;\r\n      const exchangeRate2 = data?.find(\r\n        (item: Currency) => item.cc === to,\r\n      )?.rate;\r\n      return exchangeRate1 && exchangeRate2\r\n        ? (exchangeRate = exchangeRate1 / exchangeRate2)\r\n        : null;\r\n    }\r\n    return exchangeRate;\r\n  }\r\n};\r\n","import React from 'react';\r\n\r\nexport const TableHeader = () => {\r\n  return (\r\n    <thead>\r\n      <tr>\r\n        <th>Код валюти</th>\r\n        <th>Назва валюти</th>\r\n        <th>Курс конвертації</th>\r\n      </tr>\r\n    </thead>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport shortid from 'shortid';\r\nimport { Currency } from '../../types/Currency';\r\n\r\ntype Props = {\r\n  currency: Currency;\r\n  base: number;\r\n};\r\n\r\nexport const TableRow: React.FC<Props> = ({ currency, base }) => {\r\n  return (\r\n    <tbody key={shortid.generate()}>\r\n      <tr>\r\n        <td>{currency.cc}</td>\r\n        <td>{currency.txt}</td>\r\n        <td>{(currency.rate / base).toFixed(4)}</td>\r\n      </tr>\r\n    </tbody>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport shortid from 'shortid';\r\nimport { TableHeader } from './TableHeader';\r\nimport { TableRow } from './TableRow';\r\nimport { Currency } from '../../types/Currency';\r\n\r\ntype Props = {\r\n  currencies: Currency[];\r\n  baseCurrency: string;\r\n};\r\n\r\nexport const Table: React.FC<Props> = ({ currencies, baseCurrency }) => {\r\n  let base: number;\r\n  const findObj = currencies.find(currency => currency.cc === baseCurrency);\r\n  if (baseCurrency === 'UAH') {\r\n    base = 1;\r\n  } else if (findObj !== undefined) {\r\n    base = findObj.rate;\r\n  }\r\n\r\n  return (\r\n    <table>\r\n      <TableHeader />\r\n      {currencies?.map((currency: Currency) => (\r\n        <TableRow currency={currency} base={base} key={shortid.generate()} />\r\n      ))}\r\n    </table>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport shortid from 'shortid';\r\nimport { SelectBox, Select } from '../styles/styles';\r\n\r\ntype Props = {\r\n  currencySelect: string[];\r\n  baseCurrency: string;\r\n  handleChangeSelect: (event: React.ChangeEvent<HTMLSelectElement>) => void;\r\n};\r\n\r\nexport const Selector: React.FC<Props> = ({\r\n  currencySelect,\r\n  baseCurrency,\r\n  handleChangeSelect,\r\n}) => {\r\n  return (\r\n    <SelectBox>\r\n      <Select\r\n        className=\"select-box__cur\"\r\n        value={baseCurrency}\r\n        onChange={handleChangeSelect}\r\n      >\r\n        {currencySelect.map(option => (\r\n          <option key={shortid.generate()} value={option}>\r\n            {option}\r\n          </option>\r\n        ))}\r\n      </Select>\r\n    </SelectBox>\r\n  );\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { Table } from '../components/Table/Table';\r\nimport { Selector } from '../components/Selector';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  getPendingSelector,\r\n  getCurrenciesSelector,\r\n  getErrorSelector,\r\n  getCurrencyOptions,\r\n} from '../store/currency/selectors';\r\nimport { fetchCurrencyRequest } from '../store/currency/actions';\r\nimport { getBaseCurrencySelector } from '../store/filters/filters-selectors';\r\nimport { FilterActionsCreator } from '../store/filters';\r\nimport { Title } from '../styles/styles';\r\n\r\nexport const ExchangeRatePage: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const pending = useSelector(getPendingSelector);\r\n  const currencies = useSelector(getCurrenciesSelector);\r\n  const currArr = useSelector(getCurrencyOptions);\r\n  const currencySelect = ['UAH', ...currArr];\r\n  const error = useSelector(getErrorSelector);\r\n  const baseCurrency = useSelector(getBaseCurrencySelector);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchCurrencyRequest());\r\n  }, [dispatch]);\r\n\r\n  const handleChangeSelect = (event: React.ChangeEvent<HTMLSelectElement>) =>\r\n    dispatch(FilterActionsCreator.setBaseCurrency(event.target.value));\r\n\r\n  return (\r\n    <>\r\n      <Title>Курс обміну</Title>\r\n      {pending ? (\r\n        <div>Loading...</div>\r\n      ) : error ? (\r\n        <div>Error</div>\r\n      ) : (\r\n        <>\r\n          <Selector\r\n            currencySelect={currencySelect}\r\n            baseCurrency={baseCurrency}\r\n            handleChangeSelect={handleChangeSelect}\r\n          />\r\n          <Table currencies={currencies} baseCurrency={baseCurrency} />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import React, { Suspense } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { Navbar } from './components/NavBar';\nimport { ConvertorPage } from './pages/ConvertorPage';\nimport { ExchangeRatePage } from './pages/ExchangeRatePage';\n\nconst App: React.FC = () => {\n  return (\n    <>\n      <Navbar />\n      <div className=\"container\">\n        <Switch>\n          <Suspense fallback={<p>Loading...</p>}>\n            <Route component={ConvertorPage} path=\"/\" exact />\n            <Route component={ExchangeRatePage} path=\"/about\" />\n            <Redirect to=\"/\" />\n          </Suspense>\n        </Switch>\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","import { combineReducers } from 'redux';\r\nimport { currencyReducer } from './currency';\r\nimport { reducerFilter } from './filters';\r\n\r\nconst rootReducer = combineReducers({\r\n  currency: currencyReducer,\r\n  filters: reducerFilter,\r\n});\r\n\r\nexport type AppState = ReturnType<typeof rootReducer>;\r\n\r\nexport default rootReducer;\r\n","import { all, fork } from 'redux-saga/effects';\r\nimport { currencySaga } from './currency';\r\n\r\nexport function* rootSaga() {\r\n  yield all([fork(currencySaga)]);\r\n}\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport logger from 'redux-logger';\r\nimport rootReducer from './rootReducer';\r\nimport { rootSaga } from './rootSaga';\r\n\r\n// Create the saga middleware\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\n// Mount it on the Store\r\nconst store = createStore(rootReducer, applyMiddleware(sagaMiddleware, logger));\r\n\r\n// Run the saga\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport './index.css';\nimport store from './store';\n\nrender(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}